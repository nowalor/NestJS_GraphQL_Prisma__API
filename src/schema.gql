# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateSnippetInput {
  content: String!
  programmingLanguageId: Int!
}

input CreateTestInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

type IdentityEntity {
  email: String!
  id: Int!
  name: String
  profileImg: String
  snippets: PaginatedSnippetsEntity!
  username: String!
}

input LoginInput {
  password: String!
  username: String!
}

type LoginResponse {
  access_token: String!
  user: UserEntity!
}

type Mutation {
  createSnippet(createSnippetInput: CreateSnippetInput!): Snippet!
  createTest(createTestInput: CreateTestInput!): Test!
  login(loginInput: LoginInput!): LoginResponse!
  register(registerUserInput: RegisterUserInput!): UserEntity!
  removeSnippet(id: Int!): Snippet!
  removeTest(id: Int!): Test!
  updateIdentity(updateIdentityInput: UpdateIdentityInput!): String!
  updateSnippet(updateSnippetInput: UpdateSnippetInput!): Snippet!
  updateTest(updateTestInput: UpdateTestInput!): Test!
}

type PaginatedSnippetsEntity {
  items: [Snippet!]!
  total: Int!
  totalPages: Int!
}

type ProgrammingLanguage {
  id: Int!
  name: String!
}

type Query {
  identity(snippetPage: Float): IdentityEntity!
  index: String!
  languages: [ProgrammingLanguage!]!
  snippet(id: Int!): Snippet!
  snippets: [Snippet!]!
  test(id: Int!): Test!
  user(username: String!): UserEntity!
  users: [UserEntity!]!
}

input RegisterUserInput {
  email: String!
  password: String!
  username: String!
}

type Snippet {
  content: String!
  id: Int!
  programmingLanguage: ProgrammingLanguage!
  user: UserEntity!
}

type Test {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateIdentityInput {
  profilePicture: String!
}

input UpdateSnippetInput {
  content: String
  id: Int!
  programmingLanguageId: Int
}

input UpdateTestInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type UserEntity {
  email: String!
  id: Int!
  name: String
  profileImg: String
  username: String!
}